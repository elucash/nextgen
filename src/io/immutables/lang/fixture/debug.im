
// Mixed content of compilation unit

//x, y, z = 1, 2, 3
constant = 1

packageFeature String {
  //
}

type Position() {
  x, y Int~ := 0
}

// void function
packageDefinition(a Int, b String) {

}

main {
  //println
}

concept Breathes{}

type Point(x, y, z Double)

type Person{name String, age Bool} :: Breathes {
  name String { // return name
  }
  age Bool { // return age
  }
}

type Complex{re, im Int}

//impl Complex :: Number {
//  (a Complex) + (b Complex) Complex {
//    return ....
//  }
//}

//concept ComplexAble {
//  re Complex
//  im Complex
//  my(z Bool) Complex
//}

//impl t Int :: ComplexAble {
//  re Complex {
//    return Complex{re: t, im: 0}
//  }
//  im Complex {
//    return Complex{re: 0, im: t}
//  }
//}
